.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.19)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Captcha::reCAPTCHA 3"
.TH Captcha::reCAPTCHA 3 "2010-07-03" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Captcha::reCAPTCHA \- A Perl implementation of the reCAPTCHA API
.SH "VERSION"
.IX Header "VERSION"
This document describes Captcha::reCAPTCHA version 0.93
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Captcha::reCAPTCHA;
\&
\&    my $c = Captcha::reCAPTCHA\->new;
\&
\&    # Output form
\&    print $c\->get_html( \*(Aqyour public key here\*(Aq );
\&
\&    # Verify submission
\&    my $result = $c\->check_answer(
\&        \*(Aqyour private key here\*(Aq, $ENV{\*(AqREMOTE_ADDR\*(Aq},
\&        $challenge, $response
\&    );
\&
\&    if ( $result\->{is_valid} ) {
\&        print "Yes!";
\&    }
\&    else {
\&        # Error
\&        $error = $result\->{error};
\&    }
.Ve
.PP
For complete examples see the /examples subdirectory
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
reCAPTCHA is a hybrid mechanical turk and captcha that allows visitors
who complete the captcha to assist in the digitization of books.
.PP
From <http://recaptcha.net/learnmore.html>:
.PP
.Vb 6
\&    reCAPTCHA improves the process of digitizing books by sending words that
\&    cannot be read by computers to the Web in the form of CAPTCHAs for
\&    humans to decipher. More specifically, each word that cannot be read
\&    correctly by OCR is placed on an image and used as a CAPTCHA. This is
\&    possible because most OCR programs alert you when a word cannot be read
\&    correctly.
.Ve
.PP
This Perl implementation is modelled on the \s-1PHP\s0 interface that can be
found here:
.PP
<http://recaptcha.net/plugins/php/>
.PP
To use reCAPTCHA you need to register your site here:
.PP
<https://www.google.com/recaptcha/admin/create>
.SH "INTERFACE"
.IX Header "INTERFACE"
.ie n .IP """new""" 4
.el .IP "\f(CWnew\fR" 4
.IX Item "new"
Create a new \f(CW\*(C`Captcha::reCAPTCHA\*(C'\fR.
.ie n .IP """get_html( $pubkey, $error, $use_ssl, $options )""" 4
.el .IP "\f(CWget_html( $pubkey, $error, $use_ssl, $options )\fR" 4
.IX Item "get_html( $pubkey, $error, $use_ssl, $options )"
Generates \s-1HTML\s0 to display the captcha.
.Sp
.Vb 1
\&    print $captcha\->get_html( $PUB, $err );
.Ve
.RS 4
.ie n .IP "$pubkey" 4
.el .IP "\f(CW$pubkey\fR" 4
.IX Item "$pubkey"
Your reCAPTCHA public key, from the \s-1API\s0 Signup Page
.ie n .IP "$error" 4
.el .IP "\f(CW$error\fR" 4
.IX Item "$error"
Optional. If set this should be either a string containing a reCAPTCHA
status code or a result hash as returned by \f(CW\*(C`check_answer\*(C'\fR.
.ie n .IP "$use_ssl" 4
.el .IP "\f(CW$use_ssl\fR" 4
.IX Item "$use_ssl"
Optional. Should the SSL-based \s-1API\s0 be used? If you are displaying a page
to the user over \s-1SSL\s0, be sure to set this to true so an error dialog
doesn't come up in the user's browser.
.ie n .IP "$options" 4
.el .IP "\f(CW$options\fR" 4
.IX Item "$options"
Optional. A reference to a hash of options for the captcha. See 
\&\f(CW\*(C`get_options_setter\*(C'\fR for more details.
.RE
.RS 4
.Sp
Returns a string containing the \s-1HTML\s0 that should be used to display
the captcha.
.RE
.ie n .IP """get_options_setter( $options )""" 4
.el .IP "\f(CWget_options_setter( $options )\fR" 4
.IX Item "get_options_setter( $options )"
You can optionally customize the look of the reCAPTCHA widget with some
JavaScript settings. \f(CW\*(C`get_options_setter\*(C'\fR returns a block of Javascript
wrapped in <script> .. </script> tags that will set the options to be used
by the widget.
.Sp
\&\f(CW$options\fR is a reference to a hash that may contain the following keys:
.RS 4
.ie n .IP """theme""" 4
.el .IP "\f(CWtheme\fR" 4
.IX Item "theme"
Defines which theme to use for reCAPTCHA. Possible values are 'red',
\&'white' or 'blackglass'. The default is 'red'.
.ie n .IP """tabindex""" 4
.el .IP "\f(CWtabindex\fR" 4
.IX Item "tabindex"
Sets a tabindex for the reCAPTCHA text box. If other elements in the
form use a tabindex, this should be set so that navigation is easier for
the user. Default: 0.
.RE
.RS 4
.RE
.ie n .IP """check_answer""" 4
.el .IP "\f(CWcheck_answer\fR" 4
.IX Item "check_answer"
After the user has filled out the \s-1HTML\s0 form, including their answer for
the \s-1CAPTCHA\s0, use \f(CW\*(C`check_answer\*(C'\fR to check their answer when they
submit the form. The user's answer will be in two form fields,
recaptcha_challenge_field and recaptcha_response_field. The reCAPTCHA
library will make an \s-1HTTP\s0 request to the reCAPTCHA server and verify the
user's answer.
.RS 4
.ie n .IP "$privkey" 4
.el .IP "\f(CW$privkey\fR" 4
.IX Item "$privkey"
Your reCAPTCHA private key, from the \s-1API\s0 Signup Page.
.ie n .IP "$remoteip" 4
.el .IP "\f(CW$remoteip\fR" 4
.IX Item "$remoteip"
The user's \s-1IP\s0 address, in the format 192.168.0.1.
.ie n .IP "$challenge" 4
.el .IP "\f(CW$challenge\fR" 4
.IX Item "$challenge"
The value of the form field recaptcha_challenge_field
.ie n .IP "$response" 4
.el .IP "\f(CW$response\fR" 4
.IX Item "$response"
The value of the form field recaptcha_response_field.
.RE
.RS 4
.Sp
Returns a reference to a hash containing two fields: \f(CW\*(C`is_valid\*(C'\fR
and \f(CW\*(C`error\*(C'\fR.
.Sp
.Vb 4
\&    my $result = $c\->check_answer(
\&        \*(Aqyour private key here\*(Aq, $ENV{\*(AqREMOTE_ADDR\*(Aq},
\&        $challenge, $response
\&    );
\&
\&    if ( $result\->{is_valid} ) {
\&        print "Yes!";
\&    }
\&    else {
\&        # Error
\&        $error = $result\->{error};
\&    }
.Ve
.Sp
See the /examples subdirectory for examples of how to call \f(CW\*(C`check_answer\*(C'\fR.
.RE
.SH "CONFIGURATION AND ENVIRONMENT"
.IX Header "CONFIGURATION AND ENVIRONMENT"
Captcha::reCAPTCHA requires no configuration files or environment
variables.
.PP
To use reCAPTCHA sign up for a key pair here:
.PP
<https://www.google.com/recaptcha/admin/create>
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
LWP::UserAgent,
HTML::Tiny
.SH "INCOMPATIBILITIES"
.IX Header "INCOMPATIBILITIES"
None reported .
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
No bugs have been reported.
.PP
Please report any bugs or feature requests to
\&\f(CW\*(C`bug\-captcha\-recaptcha@rt.cpan.org\*(C'\fR, or through the web interface at
<http://rt.cpan.org>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Andy Armstrong  \f(CW\*(C`<andy@hexten.net>\*(C'\fR
.SH "LICENCE AND COPYRIGHT"
.IX Header "LICENCE AND COPYRIGHT"
Copyright (c) 2007, Andy Armstrong \f(CW\*(C`<andy@hexten.net>\*(C'\fR. All rights reserved.
.PP
This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself. See perlartistic.
.SH "DISCLAIMER OF WARRANTY"
.IX Header "DISCLAIMER OF WARRANTY"
\&\s-1BECAUSE\s0 \s-1THIS\s0 \s-1SOFTWARE\s0 \s-1IS\s0 \s-1LICENSED\s0 \s-1FREE\s0 \s-1OF\s0 \s-1CHARGE\s0, \s-1THERE\s0 \s-1IS\s0 \s-1NO\s0 \s-1WARRANTY\s0
\&\s-1FOR\s0 \s-1THE\s0 \s-1SOFTWARE\s0, \s-1TO\s0 \s-1THE\s0 \s-1EXTENT\s0 \s-1PERMITTED\s0 \s-1BY\s0 \s-1APPLICABLE\s0 \s-1LAW\s0. \s-1EXCEPT\s0 \s-1WHEN\s0
\&\s-1OTHERWISE\s0 \s-1STATED\s0 \s-1IN\s0 \s-1WRITING\s0 \s-1THE\s0 \s-1COPYRIGHT\s0 \s-1HOLDERS\s0 \s-1AND/OR\s0 \s-1OTHER\s0 \s-1PARTIES\s0
\&\s-1PROVIDE\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \*(L"\s-1AS\s0 \s-1IS\s0\*(R" \s-1WITHOUT\s0 \s-1WARRANTY\s0 \s-1OF\s0 \s-1ANY\s0 \s-1KIND\s0, \s-1EITHER\s0
\&\s-1EXPRESSED\s0 \s-1OR\s0 \s-1IMPLIED\s0, \s-1INCLUDING\s0, \s-1BUT\s0 \s-1NOT\s0 \s-1LIMITED\s0 \s-1TO\s0, \s-1THE\s0 \s-1IMPLIED\s0
\&\s-1WARRANTIES\s0 \s-1OF\s0 \s-1MERCHANTABILITY\s0 \s-1AND\s0 \s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0. \s-1THE\s0
\&\s-1ENTIRE\s0 \s-1RISK\s0 \s-1AS\s0 \s-1TO\s0 \s-1THE\s0 \s-1QUALITY\s0 \s-1AND\s0 \s-1PERFORMANCE\s0 \s-1OF\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \s-1IS\s0 \s-1WITH\s0
\&\s-1YOU\s0. \s-1SHOULD\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \s-1PROVE\s0 \s-1DEFECTIVE\s0, \s-1YOU\s0 \s-1ASSUME\s0 \s-1THE\s0 \s-1COST\s0 \s-1OF\s0 \s-1ALL\s0
\&\s-1NECESSARY\s0 \s-1SERVICING\s0, \s-1REPAIR\s0, \s-1OR\s0 \s-1CORRECTION\s0.
.PP
\&\s-1IN\s0 \s-1NO\s0 \s-1EVENT\s0 \s-1UNLESS\s0 \s-1REQUIRED\s0 \s-1BY\s0 \s-1APPLICABLE\s0 \s-1LAW\s0 \s-1OR\s0 \s-1AGREED\s0 \s-1TO\s0 \s-1IN\s0 \s-1WRITING\s0
\&\s-1WILL\s0 \s-1ANY\s0 \s-1COPYRIGHT\s0 \s-1HOLDER\s0, \s-1OR\s0 \s-1ANY\s0 \s-1OTHER\s0 \s-1PARTY\s0 \s-1WHO\s0 \s-1MAY\s0 \s-1MODIFY\s0 \s-1AND/OR\s0
\&\s-1REDISTRIBUTE\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \s-1AS\s0 \s-1PERMITTED\s0 \s-1BY\s0 \s-1THE\s0 \s-1ABOVE\s0 \s-1LICENCE\s0, \s-1BE\s0
\&\s-1LIABLE\s0 \s-1TO\s0 \s-1YOU\s0 \s-1FOR\s0 \s-1DAMAGES\s0, \s-1INCLUDING\s0 \s-1ANY\s0 \s-1GENERAL\s0, \s-1SPECIAL\s0, \s-1INCIDENTAL\s0,
\&\s-1OR\s0 \s-1CONSEQUENTIAL\s0 \s-1DAMAGES\s0 \s-1ARISING\s0 \s-1OUT\s0 \s-1OF\s0 \s-1THE\s0 \s-1USE\s0 \s-1OR\s0 \s-1INABILITY\s0 \s-1TO\s0 \s-1USE\s0
\&\s-1THE\s0 \s-1SOFTWARE\s0 (\s-1INCLUDING\s0 \s-1BUT\s0 \s-1NOT\s0 \s-1LIMITED\s0 \s-1TO\s0 \s-1LOSS\s0 \s-1OF\s0 \s-1DATA\s0 \s-1OR\s0 \s-1DATA\s0 \s-1BEING\s0
\&\s-1RENDERED\s0 \s-1INACCURATE\s0 \s-1OR\s0 \s-1LOSSES\s0 \s-1SUSTAINED\s0 \s-1BY\s0 \s-1YOU\s0 \s-1OR\s0 \s-1THIRD\s0 \s-1PARTIES\s0 \s-1OR\s0 A
\&\s-1FAILURE\s0 \s-1OF\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \s-1TO\s0 \s-1OPERATE\s0 \s-1WITH\s0 \s-1ANY\s0 \s-1OTHER\s0 \s-1SOFTWARE\s0), \s-1EVEN\s0 \s-1IF\s0
\&\s-1SUCH\s0 \s-1HOLDER\s0 \s-1OR\s0 \s-1OTHER\s0 \s-1PARTY\s0 \s-1HAS\s0 \s-1BEEN\s0 \s-1ADVISED\s0 \s-1OF\s0 \s-1THE\s0 \s-1POSSIBILITY\s0 \s-1OF\s0
\&\s-1SUCH\s0 \s-1DAMAGES\s0.
