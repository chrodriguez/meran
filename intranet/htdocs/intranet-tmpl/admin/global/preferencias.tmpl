[% INCLUDE "intranet-top.inc" %]

<script src="/includes/jquery/tablesorter/jquery.tablesorter.js"></script>
<script src="/includes/jquery/tablesorter/jquery.tablesorter.pager.js"></script>
<script src="/includes/jquery/tablesorter/jquery.tablesorter.doblePaginador.js"></script>
<link href="/includes/jquery/tablesorter/style.css" type="text/css" rel="stylesheet">

<script language="JavaScript" type="text/javascript">

var objAH;//Objeto AjaxHelper.

/*
 * updateInfoConsulta
 * Actualizacion de los datos despues de una consulta ajax. El resultado se inserta en el div result.
 */
function updateInfoConsulta(responseText){
	$("#divResultado").html(responseText);
	if(objAH.funcion == 1){
		tablaOrdenada();
	}
}

/*
 * updateInfoConsultaJSON
 * Actualizacion de los datos despues de una consulta ajax que trae un string json.
 * El resultado se procesa, para mostrar lo que corresponda.
 */
function updateInfoConsultaJSON(responseText){
// 	jAlert(responseText);
	procesarJSON(responseText,objAH.idComp,objAH.funcionChange,objAH.tipo);
}


/*
 * borrarDiv
 * Borra el div que contiene la parte de agregado de variables.
 */
function borrarDiv(){$("#divAgregar").html("");}


/*
 * OcultarCombos
 * Oculta los combos.
 */
function ocultarCombos(){$("#divCombos").hide();}
/*
 * MostrarCombos
 * _Muestra los combos.
 */
function mostrarCombos(){
	$("#divCombos").show();}


/*
 * agregarPreferencia
 * Muestra la parte de agregado de una variable con los componentes correspondientes con el tipo de variable que
 * se eligio.
 */
function agregarPreferencia(){
	var tipo=$("#tipoVar").val();
	ocultarCombos();
	var ok=1;
	objAH=new AjaxHelper(updateAgregarPreferencia);
	objAH.debug= true;
	objAH.url= "/cgi-bin/koha/admin/global/preferenciasDB.pl";
	objAH.tipo=tipo;
    objAH.showOverlay       = true;
 	objAH.accion= "NUEVA_VARIABLE";
	
	if(tipo == "0"){ok=0;jAlert(DEBE_SELECCIONAR_UNA_OPCION);}

	if(tipo == "referencia"){
		var tabla=$("#tabla").val();
		var campo=$("#campo").val();
		if(tabla == -1 || campo == -1){ok=0;jAlert(DEBE_SELECCIONAR_UNA_TABLA_DE_REFERENCIA);}
		else{objAH.tabla=tabla;
		     objAH.campo=campo;
		}
	}

	if(tipo == "valAuto"){
		var cat=$("#categoria").val();
		if(cat == -1){ok=0;jAlert(DEBE_SELECCIONAR_UN_VALOR_AUTORIZADO);}
		else{objAH.categoria=cat;}
	}

	if(ok){
		borrarDiv();
		objAH.sendToServer();
	}else{mostrarCombos();}
}

function updateAgregarPreferencia(responseText){
	$("#divResultado").html(responseText);
}

/*
 * selectOpcion
 * Dependiendo del tipo de variable a agregar, si se elige una tabla de referencia o algï¿½n valor autorizado, se
 * crean los componentes necesarios para representar la informancion que se necesita.
 */
function selectOpcion(){
	var tabla=$("#tabla");
	var categ=$("#categoria");
	var campo=$("#campo");
	var tipo=$("#tipoVar").val();
	borrarDiv();
	objAH=new AjaxHelper(updateInfoConsultaJSON);
	objAH.debug= true;
    objAH.showOverlay       = true;
	objAH.url= "/cgi-bin/koha/admin/global/preferenciasDB.pl";
	objAH.tipo=tipo;
	objAH.accion= "SELECCION_CAMPO";
 	objAH.json=1;

	if(tipo == "referencia" && tabla.length == 0){
		objAH.idComp="tabla";
		objAH.funcionChange="onChange='elegirCampo()'";
		objAH.sendToServer();
	}
	else{
		if(tipo == "referencia" && tabla.length == 1){tabla.show();campo.show();}
	}

	if(tipo == "valAuto" && categ.length == 0){
		objAH.idComp="categoria";
		objAH.funcionChange="onChange='elegirCampo()'";
		objAH.sendToServer();
	}
	else{
		if(tipo == "valAuto" && categ.length == 1){categ.show();}
	}

	if(tipo != "referencia"){
		tabla.hide();
		campo.hide();
	}
	if(tipo != "valAuto"){ categ.hide();}
}

/*
 * elegirCampo
 * Cuando se selecciona una tabla de referencia se crea un listado con los campos de esa tabla.
 */
function elegirCampo(){

	var tabla=$("#tabla");
	var campo=$("#campo");
	var tipo=$("#tipoVar").val();
	borrarDiv();

	if(tipo == "referencia" && tabla.length == 1){
		campo.remove();
		objAH=new AjaxHelper(updateInfoConsultaJSON);
		objAH.url= "/cgi-bin/koha/admin/global/preferenciasDB.pl";
        objAH.showOverlay       = true;
		objAH.tipo=tipo;
// 		objAH.json=1;
		objAH.accion= "SELECCION_CAMPO";
		objAH.tabla=tabla.val();
		objAH.idComp="campo";
		objAH.funcionChange="onChange='borrarDiv()'";
		objAH.sendToServer();
	}
}

/*
 * procesarJSON
 * Procesa el string json que viene como parametro, y crea el listado de opciones correspondiente y se inserta en
 * en donde corresponda.
 */
function procesarJSON(json, id,change,tipo){
	var objetos=JSONstring.toObject(json);
	var opciones="<option value='-1'>Elegir Opcion</option>";
	for(var i=0; i< objetos.length; i++){
		
			if (id == "tabla"){	// Mostrar Tablas
			opciones=opciones+"<option value= '"+objetos[i].alias_tabla+"'> "+objetos[i].alias_tabla+"</option>";
			}
			if (id == "campo"){ // Mostrar Campo
			opciones=opciones+"<option value= '"+objetos[i].campo+"'> "+objetos[i].campo+"</option>";
			}
			if (tipo == "valAuto"){	// Mostrar Valor Autorizado
				opciones=opciones+"<option value= '"+objetos[i].category+"'> "+objetos[i].category+"</option>";
			}
		}
	var sel="<select id='"+id+"'"+change+">"+opciones+"</select>";
	$(sel).insertBefore("#divAgregar");
}

/*
 * respuesta
 * Cuando se guarda una variable nueva se verifica si esta ya exite, si es asi se devuelve un error y se muestra
 * en la pantalla, de lo contrario se guarda la variable.
 */
function respuesta(responseText){
	var Messages=JSONstring.toObject(responseText);
	setMessages(Messages);
}



/*
 * tablaOrdenada
 * Hace que la tabla con los resultados, se pueda ordenar por los campos correspondientes y tambien hace que se 
 * pueda usar dos paginadores.
 */
function tablaOrdenada(){
	var tabla=$("#tablaResultado").tablesorter({	
				widgets: ['zebra'],
				headers: { 0: { sorter: false},
					   4: { sorter: false},
					   5: { sorter: false}}
				});
// 	inicializacion(tabla);
}

/*
 * getRadioButtonSelectedValue
 * Funcion retorna el valor seleccionado en un radiobutton
 */

function getRadioButtonSelectedValue(ctrl)
{
    for(i=0;i<ctrl.length;i++)
        if(ctrl[i].checked) return ctrl[i].value;
}


/*
 * guardarModificacion
 * Hace el llamado ajax para poder guardar los datos ingresados para la variable.
 */
function guardarModificacion(){

	objAH               = new AjaxHelper(updateGuardarModificacion);
	objAH.debug         = true;
	objAH.url           = "/cgi-bin/koha/admin/global/preferenciasDB.pl";
    objAH.showOverlay       = true;
	objAH.variable      = $("#variable").val();
	objAH.valor         = $("#valor").val();
    objAH.categoria     = 'sistema';

	if ($("#tipoVar").val() == 'bool'){
	    objAH.valor=(getRadioButtonSelectedValue( $("[name=valor]")));
	}

	objAH.explicacion   = $("#explicacion").val();
	objAH.accion        = "GUARDAR_MODIFICACION_VARIABLE";
	objAH.sendToServer();

}

/*
 * updateGuardarModificacion
 * Funcion que se ejecuta cuando se guarda una variable. Si la variable no existe hace una busqueda para encontrar
 * todas las variables, si existe muestra un mensaje de error en la pantalla.
 */
function updateGuardarModificacion(responseText){
	
	respuesta(responseText);
	$("#tabla").remove();
	$("#campo").remove();
	$("#categoria").remove();
	$("#tipoVar").val(0);
	borrarDiv();
	buscarPreferencia();
}

/*
 * buscarPreferencia
 * Busca todas las preferencias o las que se corresponden con el string ingresado para filtrar la busqueda.
 */
function buscarPreferencia(){
	objAH               = new AjaxHelper(updateBuscarPreferencia);
	objAH.debug         = true;
    objAH.showOverlay   = true;
	objAH.url           = "/cgi-bin/koha/admin/global/preferenciasDB.pl";
	objAH.buscar        = $("#buscar").val();
	objAH.accion        = "BUSCAR_PREFERENCIAS";
	objAH.categoria     = 'sistema';
	objAH.sendToServer();
}

function updateBuscarPreferencia(responseText){
	mostrarCombos();
	$("#divResultado").html(responseText);
	tablaOrdenada();
}


/*
 * limpiar
 * Borra el texto ingresado en el componente de busqueda.
 */
function limpiar(){$("#buscar").val("");}

/*
 * modificarVariable
 * Hace el llamado ajax para poder modificar y mostrar la parte de modificacion de la variables seleccionada.
 */
function modificarVariable(variable,tipo){

	var compo=$("#tipoVar");
	compo.val(tipo);
	borrarDiv();
	ocultarCombos();

	//compo.attr("disabled","disabled");
	//$("#tabla").remove();
	//$("#campo").remove();
	//$("#categoria").remove();

	objAH=new AjaxHelper(updateModificarVariable);
	objAH.debug= true;
    objAH.showOverlay       = true;
	objAH.url= "/cgi-bin/koha/admin/global/preferenciasDB.pl";
	objAH.variable=variable;
	objAH.accion= "MODIFICAR_VARIABLE";
	objAH.sendToServer();
}

function updateModificarVariable(responseText){
	$("#divResultado").html(responseText);
}

/*
 * guardarNuevaVariable
 * Hace el llamado ajax para poder guardar los datos ingresados para la nueva variable.
 */
function guardarNuevaVariable(){

	objAH=new AjaxHelper(updateGuardarModificacion);
	objAH.debug= true;
	objAH.url= "/cgi-bin/koha/admin/global/preferenciasDB.pl";
    objAH.showOverlay       = true;
	objAH.variable=$("#variable").val();
	objAH.explicacion=$("#explicacion").val();
	objAH.tipo=$("#tipoVar").val();

	if (objAH.tipo == 'bool'){
	    objAH.valor=(getRadioButtonSelectedValue( $("[name=valor]")));
	}else{
        objAH.valor=$("#valor").val();
	
	    if (objAH.tipo == "valAuto" ){
			    objAH.categoria=$("#categoria").val();
        }
	    if (objAH.tipo == "referencia"){	
			    objAH.tabla=$("#tabla").val();
			    objAH.campo=$("#campo").val();
        }
	}


	objAH.accion= "GUARDAR_NUEVA_VARIABLE";
	objAH.sendToServer();

}

/*
 * updateGuardarNuevaVariable
 * Funcion que se ejecuta cuando se guarda una nueva variable. Si la variable existe muestra un mensaje de error en la pantalla.
 */
function updateGuardarModificacion(responseText){
	
	respuesta(responseText);
	$("#tabla").remove();
	$("#campo").remove();
	$("#categoria").remove();
	$("#tipoVar").val(0);
	borrarDiv();
	buscarPreferencia();

}


$(document).ready( function() {
	buscarPreferencia();
	onEnter("buscar",buscarPreferencia);
});

</script>

<div class="titulos"></div>
<fieldset id="reportes">
    <legend class="titulo_legend"> [% "Administraci&oacute;n de Preferencias del Sistema" | i18n %] </legend>
    <ul>
        <li class="sub_item">
            <input type="text" id="buscar" name="buscar" value="">
            [% PERL %]
                                print C4::AR::Filtros::to_Button(   text    => "[% 'Buscar' | i18n %]",
                                                                    boton   => "boton_buscar",
                                                                    onClick => "buscarPreferencia();",
                                                                    title   => "[% 'Buscar' | i18n %]",
                                        ) ;
            [% END %]
        
            [% PERL %]
                                print C4::AR::Filtros::to_Button(   text    => "[% 'Limpiar' | i18n %]",
                                                                    boton   => "boton_borrar",
                                                                    onClick => "limpiar();",
                                                                    title   => "[% 'Limpiar' | i18n %]",
                                        ) ;
            [% END %]
        </li>
    </ul>
</fieldset>

<div id="divCombos" style="clear: both;">
    <fieldset id="reportes">
        <legend class="titulo_legend"> [% "Agregar" | i18n %] </legend>
        <ul>
            <li class="sub_item">
                <select id="tipoVar" onChange="selectOpcion()">
                    <option value="0">[% "Seleccionar ..." | i18n %]</option>
                    <option value="bool">[% "Si-No" | i18n %]</option>
                    <option value="texta">[% "Texto grande" | i18n %]</option>
                    <option value="text">[% "Texto com&uacute;n" | i18n %]</option>
                    <option value="referencia">[% "Referencia" | i18n %]</option>
                    <option value="valAuto">[% "Valores autorizados" | i18n %]</option>
                </select>
            </li>
        </ul>

    <div id="divAgregar" style="clear: both;"></div>
    [% PERL %]
                        print C4::AR::Filtros::to_Button(   text    => "[% 'Agregar' | i18n %]",
                                                            boton   => "boton_agregar",
                                                            onClick => "agregarPreferencia();",
                                                            title   => "[% 'Agregar' | i18n %]",
                                                            alternClass => "botonCentrado"
                                ) ;
    [% END %]
</fieldset>
</div>

<div id="divResultado" style="clear: both;"></div>


[% INCLUDE "intranet-bottom.inc" %]
