.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Sphinx::Manager 3"
.TH Sphinx::Manager 3 "2011-03-23" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Sphinx::Manager \- Sphinx search engine management (start/stop)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Sphinx::Manager;
\&
\&    my $mgr = Sphinx::Manager\->new({ config_file => \*(Aq/etc/sphinx.conf\*(Aq });
\&    $mgr\->start_searchd;
\&    $mgr\->restart_searchd;
\&    $mgr\->reload_searchd;
\&    $mgr\->stop_searchd;
\&    $mgr\->get_searchd_pid;
\&    $mgr\->run_indexer;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides utilities to start, stop, restart, and reload the Sphinx
search engine binary (searchd), and to run the Sphinx indexer program.  The
utilities are designed to handle abnormal conditions, such as \s-1PID\s0 files not
being present when expected, and so should be robust in most situations.
.SH "CONSTRUCTOR"
.IX Header "CONSTRUCTOR"
.SS "new"
.IX Subsection "new"
.Vb 1
\&    $mgr = Sphinx::Manager\->new(\e%opts);
.Ve
.PP
Create a new Sphinx manager.  The names of options are the same as the
setter/getter functions listed below.
.SH "SETTERS/GETTERS"
.IX Header "SETTERS/GETTERS"
.SS "config_file"
.IX Subsection "config_file"
.Vb 2
\&    $mgr\->config_file($filename)
\&    $filename = $mgr\->config_file;
.Ve
.PP
Set/get the configuration file.  Defaults to sphinx.conf in current working directory.
.SS "pid_file"
.IX Subsection "pid_file"
.Vb 2
\&    $mgr\->pid_file($filename)
\&    $filename = $mgr\->pid_file;
.Ve
.PP
Set/get the \s-1PID\s0 file.  If given, this will be used in preference to any value in the given config_file.
.SS "bindir"
.IX Subsection "bindir"
.Vb 2
\&    $mgr\->bindir($dir)
\&    $dir = $mgr\->bindir;
.Ve
.PP
Set/get the directory in which to find the Sphinx binaries.
.SS "debug"
.IX Subsection "debug"
.Vb 3
\&    $mgr\->debug(1);
\&    $mgr\->debug(0);
\&    $debug_state = $mgr\->debug;
.Ve
.PP
Enable/disable debugging messages, or read back debug status.
.SS "process_timeout"
.IX Subsection "process_timeout"
.Vb 2
\&    $mgr\->process_timeout($secs)
\&    $secs = $mgr\->process_timeout;
.Ve
.PP
Set/get the time (in seconds) to wait for processes to start or stop.
.SS "searchd_bin"
.IX Subsection "searchd_bin"
Optional full path to searchd.  If not specified, normal rules for finding an executable in the \s-1PATH\s0 environment are used.
.SS "searchd_args"
.IX Subsection "searchd_args"
.Vb 2
\&    $mgr\->searchd_args(\e@args)
\&    $args = $mgr\->searchd_args;
.Ve
.PP
Set/get the extra command line arguments to pass to searchd when started using
start_searchd.  These should be in the form of an array, each entry comprising
one option or option argument.  Arguments should exclude '\-\-config \s-1CONFIG_FILE\s0',
which is included on the command line by default.
.SS "searchd_sudo"
.IX Subsection "searchd_sudo"
Optional sudo wrapper for running searchd as root or another user.
Set to 'sudo', or 'sudo \-u \s-1USER\s0', or sudo with any other options.  If
not set, searchd is run as the current user.  Of course, for this to
work, sudo privileges should be enabled for the current user and
typically without a password.  Could also be set to the name of any
other wrapper program to provide custom functionality.
.SS "indexer_args"
.IX Subsection "indexer_args"
.Vb 2
\&    $mgr\->indexer_args(\e@args)
\&    $args = $mgr\->indexer_args;
.Ve
.PP
Set/get the extra command line arguments to pass to the indexer program when
started using run_indexer.  These should be in the form of an array, each entry
comprising one option or option argument.  Arguments should exclude '\-\-config
\&\s-1CONFIG_FILE\s0', which is included on the command line by default.
.SS "indexer_sudo"
.IX Subsection "indexer_sudo"
Same as searchd_sudo above, for running the indexer.
.SH "METHODS"
.IX Header "METHODS"
.SS "start_searchd"
.IX Subsection "start_searchd"
.Vb 2
\&    $mgr\->start_searchd;
\&    $mgr\->start_searchd($ok_if_running);
.Ve
.PP
Starts the Sphinx searchd daemon.  Unless \f(CW$ok_if_running\fR is set, dies if searchd
cannot be started or if it is already running.  If \f(CW$ok_if_running\fR is set and
searchd is found to be already running, returns quietly without trying to start
it.
.SS "stop_searchd"
.IX Subsection "stop_searchd"
.Vb 1
\&    $mgr\->stop_searchd;
.Ve
.PP
Stops Sphinx searchd daemon.  Dies if searchd cannot be stopped.
.SS "restart_searchd"
.IX Subsection "restart_searchd"
.Vb 1
\&    $mgr\->restart_searchd;
.Ve
.PP
Stops and then starts the searchd daemon.
.SS "reload_searchd"
.IX Subsection "reload_searchd"
.Vb 1
\&    $mgr\->reload_searchd;
.Ve
.PP
Sends a \s-1HUP\s0 signal to the searchd daemon if it is running, to tell it to reload
its databases; otherwise starts searchd.
.SS "get_searchd_pid"
.IX Subsection "get_searchd_pid"
.Vb 1
\&    $pids = $mgr\->get_searchd_pid;
.Ve
.PP
Returns an array ref containing the \s-1PID\s0(s) of the searchd daemon.  If the \s-1PID\s0
file is in place and searchd is running, then an array containing a single \s-1PID\s0
is returned.  If the \s-1PID\s0 file is not present or is empty, the process table is
checked for other searchd processes running with the specified config file; if
found, all are returned in the array.
.SS "run_indexer(@args)"
.IX Subsection "run_indexer(@args)"
Runs the indexer program; dies on error.  Arguments passed to the indexer are
\&\*(L"\-\-config \s-1CONFIG_FILE\s0\*(R" followed by args set through indexer_args, followed by
any additional args given as parameters to run_indexer.
.SH "CAVEATS"
.IX Header "CAVEATS"
This module has been tested primarily on Linux.  It should work on any other
operating systems where \fIfork()\fR is supported and Proc::ProcessTable works.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Sphinx::Search, Sphinx::Config
.SH "AUTHOR"
.IX Header "AUTHOR"
Jon Schutz, <http://notes.jschutz.net>
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to
\&\f(CW\*(C`bug\-sphinx\-config at rt.cpan.org\*(C'\fR, or through the web interface at
<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Sphinx\-Manager>.
I will be notified, and then you'll automatically be notified of progress on
your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Sphinx::Manager
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Sphinx\-Manager>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/Sphinx\-Manager>
.IP "\(bu" 4
\&\s-1RT:\s0 \s-1CPAN\s0's request tracker
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Sphinx\-Manager>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/Sphinx\-Manager>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2008 Jon Schutz, all rights reserved.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
