.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.19)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Chart::OFC 3"
.TH Chart::OFC 3 "2012-01-29" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Chart::OFC \- Generate data files for use with Open Flash Chart
.SH "VERSION"
.IX Header "VERSION"
version 0.11
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Chart::OFC; # loads all the other classes
\&
\&    my $set = Chart::OFC::Dataset\->new( values => [ 1..10 ] );
\&    my $pie = Chart::OFC::Pie\->new( title   => \*(AqPie!\*(Aq,
\&                                    dataset => $set,
\&                                    labels  => [ \*(Aqa\*(Aq..\*(Aqj\*(Aq ],
\&                                  );
\&
\&    print $pie\->as_ofc_data();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class lets you generate data for the Open Flash Chart
library. \s-1OFC\s0 produces very attractive charts, but it's data format is
byzantine and hard to understand. This library lets you generate that
data with a high level \s-1API\s0.
.PP
\&\s-1OFC\s0 can display pie charts, lines and/or bars on a grid, and area
charts on a grid.
.PP
If you haven't explored \s-1OFC\s0 yet, you might want to stop now and go the
\&\s-1OFC\s0 home page at http://teethgrinder.co.uk/open\-flash\-chart/. There
are many examples of what it can do with \s-1OFC\s0 there, and seeing them
will help you understand exactly what kind of charts you want to
generate with this library.
.PP
Also note that this library simply generates data for \s-1OFC\s0. You still
need to embed the \s-1OFC\s0 flash in something and feed it the data to
actually make a chart. This library does not generate Flash or \s-1HTML\s0 or
anything like that.
.PP
This library was tested with \s-1OFC\s0 1.9.7, and follows the format defined
for that version. The \s-1OFC\s0 zip file is included in this distribution's
tarball, under the \fIofc\fR directory.
.SS "Classes"
.IX Subsection "Classes"
The functionality for generating charts is split across a number of
classes, each of which encapsulates one piece of a chart.
.PP
\fIDatasets\fR
.IX Subsection "Datasets"
.PP
Each data set represents one chunk of data to be displayed on your
chart. There are a number of dataset subclasses for representing data
in different formats (lines, bars, etc). You can also use the dataset
base class, \f(CW\*(C`Chart::OFC::Dataset\*(C'\fR, when creating a pie chart.
.PP
The dataset classes provided are:
.IP "\(bu" 4
Chart::OFC::Dataset
.Sp
The base class for all datasets. It has no formatting, and can only be
used with pie charts.
.IP "\(bu" 4
Chart::OFC::Dataset::Bar
.IP "\(bu" 4
Chart::OFC::Dataset::FadeBar
.IP "\(bu" 4
Chart::OFC::Dataset::OutlinedBar
.IP "\(bu" 4
Chart::OFC::Dataset::GlassBar
.IP "\(bu" 4
Chart::OFC::Dataset::3DBar
.IP "\(bu" 4
Chart::OFC::Dataset::SketchBar
.Sp
Formats your data as a set of bars. There are many different styles of
bars.
.IP "\(bu" 4
Chart::OFC::Dataset::Line
.IP "\(bu" 4
Chart::OFC::Dataset::LineWithDots
.Sp
Formats your data as a line, with optional dots marking each value.
.IP "\(bu" 4
Chart::OFC::Dataset::Area
.Sp
Like a line with dots, but this dataset also fills in the area between
the line and the X axis with a color.
.PP
\fIAxes and Axis Labels\fR
.IX Subsection "Axes and Axis Labels"
.PP
When you are creating a non-pie chart, you will want to create an X
and Y axis for the chart. These are represented by the
\&\f(CW\*(C`Chart::OFC::XAxis\*(C'\fR and \f(CW\*(C`Chart::OFC::YAxis\*(C'\fR classes.
.PP
These classes in turn can take a \f(CW\*(C`Chart::OFC::AxisLabel\*(C'\fR class to
define the label for the entire label.
.PP
\fIGrid Charts\fR
.IX Subsection "Grid Charts"
.PP
A grid chart can contain any number of datasets, in any combination of
bars and lines.
.PP
\fIPie Charts\fR
.IX Subsection "Pie Charts"
.PP
A pie chart displays a single dataset, with each value as a pie slice.
.SS "Colors"
.IX Subsection "Colors"
Many attributes in different classes expect a color. Colors can be
provided as an \s-1RGB\s0 hex string with a leading \*(L"#\*(R" symbol, or as color
names. Names are translated into \s-1RGB\s0 by use of the
\&\f(CW\*(C`Graphics::ColorNames\*(C'\fR module, using the \*(L"X\*(R" scheme. See that
module's docs for more details.
.SS "Opacity"
.IX Subsection "Opacity"
Several classes accept an opacity value for an attribute. This should
be a value from 0 (completely transparent) to 100 (completely opaque).
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
This class has a number of attributes which may be passed to the
\&\f(CW\*(C`new()\*(C'\fR method.
.SS "title"
.IX Subsection "title"
This is shown as the title of the chart.
.PP
This attribute is optional.
.SS "title_style"
.IX Subsection "title_style"
This should be a chunk of \s-1CSS\s0 specifying attributes that apply to
text, such as \*(L"font-size\*(R", \*(L"color\*(R", etc.
.PP
This defaults to the string \*(L"font-size: 25px\*(R". Without a default
specifying a sane size, the default size \s-1OFC\s0 uses seems to 1px or so.
.SS "tool_tip"
.IX Subsection "tool_tip"
This defines how tool tips are generated for data points. It uses a
simple templating language. See
http://teethgrinder.co.uk/open\-flash\-chart/gallery\-tool\-tip.php for
details.
.PP
This attribute is optional.
.SS "bg_color"
.IX Subsection "bg_color"
The background color for the chart and surrounding text.
.PP
This attribute is optional.
.SH "METHODS"
.IX Header "METHODS"
All of the above named may be accessed as read-only accessors on an
object.
.PP
This class also provide several additional methods.
.SS "as_ofc_data"
.IX Subsection "as_ofc_data"
Returns a textual representation of the chart suitable for delivering
to \s-1OFC\s0.
.SH "ROLES"
.IX Header "ROLES"
This class does the \f(CW\*(C`Chart::OFC::Role::OFCDataLines\*(C'\fR role.
.SH "TODO"
.IX Header "TODO"
This distribution does not yet support all of the features of \s-1OFC\s0.
.PP
There are a few items left to do, notably grid charts with 2 Y axes,
and background images.
.PP
It would also be nice to generate embeddable Javascript for populating
charts, since this lets you create a chart without making an
additional server request for the data.
.PP
Patches are welcome.
.SH "DONATIONS"
.IX Header "DONATIONS"
If you'd like to thank me for the work I've done on this module,
please consider making a \*(L"donation\*(R" to me via PayPal. I spend a lot of
free time creating free software, and would appreciate any support
you'd care to offer.
.PP
Please note that \fBI am not suggesting that you must do this\fR in order
for me to continue working on this particular software. I will
continue to do so, inasmuch as I have in the past, for as long as it
interests me.
.PP
Similarly, a donation made in this way will probably not make me work
on this software much more, unless I get so many donations that I can
consider working on free software full time, which seems unlikely at
best.
.PP
To donate, log into PayPal and send money to autarch@urth.org or use
the button on this page:
http://www.urth.org/~autarch/fs\-donation.html <http://www.urth.org/~autarch/fs-donation.html>
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to
\&\f(CW\*(C`bug\-chart\-ofc@rt.cpan.org\*(C'\fR, or through the web interface at
<http://rt.cpan.org>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.
.SH "AUTHOR"
.IX Header "AUTHOR"
Dave Rolsky <autarch@urth.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is Copyright (c) 2012 by Dave Rolsky.
.PP
This is free software, licensed under:
.PP
.Vb 1
\&  The Artistic License 2.0 (GPL Compatible)
.Ve
