.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.19)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Rose::DB::Object::Metadata::Column::Scalar 3"
.TH Rose::DB::Object::Metadata::Column::Scalar 3 "2010-04-27" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Rose::DB::Object::Metadata::Column::Scalar \- Scalar column metadata.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Rose::DB::Object::Metadata::Column::Scalar;
\&
\&  $col = Rose::DB::Object::Metadata::Column::Scalar\->new(...);
\&  $col\->make_methods(...);
\&  ...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Objects of this class store and manipulate metadata for scalar columns in a database.  Column metadata objects store information about columns (data type, size, etc.) and are responsible for creating object methods that manipulate column values.
.PP
This class inherits from Rose::DB::Object::Metadata::Column. Inherited methods that are not overridden will not be documented a second time here.  See the Rose::DB::Object::Metadata::Column documentation for more information.
.SH "METHOD MAP"
.IX Header "METHOD MAP"
.ie n .IP """get_set""" 4
.el .IP "\f(CWget_set\fR" 4
.IX Item "get_set"
Rose::DB::Object::MakeMethods::Generic, scalar, \f(CW\*(C`interface => \*(Aqget_set\*(Aq, ...\*(C'\fR
.ie n .IP """get""" 4
.el .IP "\f(CWget\fR" 4
.IX Item "get"
Rose::DB::Object::MakeMethods::Generic, scalar, \f(CW\*(C`interface => \*(Aqget\*(Aq, ...\*(C'\fR
.ie n .IP """get_set""" 4
.el .IP "\f(CWget_set\fR" 4
.IX Item "get_set"
Rose::DB::Object::MakeMethods::Generic, scalar, \f(CW\*(C`interface => \*(Aqset\*(Aq, ...\*(C'\fR
.PP
See the Rose::DB::Object::Metadata::Column documentation for an explanation of this method map.
.SH "OBJECT METHODS"
.IX Header "OBJECT METHODS"
.IP "\fBcheck_in [\s-1ARRAYREF\s0]\fR" 4
.IX Item "check_in [ARRAYREF]"
Get or set a reference to an array of valid column values.
.IP "\fBdefault \s-1VALUE\s0\fR" 4
.IX Item "default VALUE"
Get or set the default value for the column.
.IP "\fBinit_method [\s-1NAME\s0]\fR" 4
.IX Item "init_method [NAME]"
Get or set the name of the \*(L"init\*(R" method.  See the documentation for the \f(CW\*(C`scalar\*(C'\fR method type in Rose::DB::Object::MakeMethods::Generic for more information.
.IP "\fBlength [\s-1INT\s0]\fR" 4
.IX Item "length [INT]"
Get or set the length of the column in characters.
.IP "\fBoverflow [\s-1BEHAVIOR\s0]\fR" 4
.IX Item "overflow [BEHAVIOR]"
Get or set the setting that determines the behavior when the column value is greater than length characters.  Valid values for \s-1BEHAVIOR\s0 are:
.RS 4
.IP "\fBfatal\fR" 4
.IX Item "fatal"
Throw an exception.
.IP "\fBtruncate\fR" 4
.IX Item "truncate"
Truncate the column value to the correct length.
.IP "\fBwarn\fR" 4
.IX Item "warn"
Print a warning message.
.RE
.RS 4
.Sp
The default value is \*(L"fatal\*(R".
.RE
.IP "\fBtype\fR" 4
.IX Item "type"
Returns \*(L"scalar\*(R".
.IP "\fBwith_init [\s-1BOOL\s0]\fR" 4
.IX Item "with_init [BOOL]"
Get or set the flag that determines whether or not the method created by \f(CW\*(C`make_method()\*(C'\fR will include an \*(L"init\*(R" method as well.  See the documentation for the scalar method type in Rose::DB::Object::MakeMethods::Generic for more information.
.SH "AUTHOR"
.IX Header "AUTHOR"
John C. Siracusa (siracusa@gmail.com)
.SH "LICENSE"
.IX Header "LICENSE"
Copyright (c) 2010 by John C. Siracusa.  All rights reserved.  This program is
free software; you can redistribute it and/or modify it under the same terms
as Perl itself.
