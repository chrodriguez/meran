#!/usr/bin/perl
use strict;
require Exporter;
use CGI;
use C4::Search;
use C4::Auth;
use C4::Circulation::Circ2;
use C4::Interface::CGI::Output;
use HTML::Template;
use C4::BookShelves;
use C4::AR::PdfGenerator;

#Agregado para ver los tiempos
#use Time::HiRes qw(gettimeofday);
#open (L,">>/tmp/tiempo");
#my ($epoch, $usecs) = gettimeofday;
#my ($second, $minute, $hour) = localtime $epoch;
#printf L "comienza %02d:%02d:%02d.%06d\n", $hour, $minute, $second, $usecs;


my $query=new CGI;

#Orden
my $orden;
my %search;
my $forminputs;
my $searchdesc = '';
if ($query->param('orden')){$orden=$query->param('orden');} else {$orden='title';}


#Tuto: Es una busqueda por Estante Virtual?
my $shelves=$query->param('shelves');

#Matias: Es una busqueda en la Biblioteca Virtual?
my $virtual=$query->param('virtual');

#Luciano: Es una busqueda por diccionario
my $dictionary=$query->param('dictionary');
my $dicdetail=$query->param('dicdetail');
($dicdetail) || ($dicdetail=0);
#

my  ($template, $borrowernumber, $cookie);

if ($shelves) {
my $star=$query->param('startfrom');
print $query->redirect("/cgi-bin/koha/opac-shelves.pl?viewShelfItems=$shelves&startfrom=0");
} elsif ($virtual) {
($template, $borrowernumber, $cookie)
                = get_template_and_user({template_name => "virtual/opac-virtualsearchresults.tmpl",
                             query => $query,
                             type => "opac",
                             authnotrequired => 1,
                             flagsrequired => {borrow => 1}
                             });

} elsif ($dictionary) {
	($template, $borrowernumber, $cookie)
                = get_template_and_user({template_name => "dictionary-search.tmpl",
                             query => $query,
                             type => "opac",
                             authnotrequired => 1,
                             flagsrequired => {borrow => 1}
                             });
	$search{'dictionary'}= $dictionary;
	push @$forminputs, {field => 'dictionary' , value => $dictionary};
	$search{'dicdetail'}= $dicdetail;
	$searchdesc.="diccionario";
}else {
($template, $borrowernumber, $cookie)
    = get_template_and_user({template_name => "opac-searchresults.tmpl",
                             query => $query,
                             type => "opac",
                             authnotrequired => 1,
                             flagsrequired => {borrow => 1},
                         });

} 

if (C4::Context->preference("EnabledMailSystem")){
			my ($borr, $flags) = getpatroninformation(undef, $borrowernumber);
                        if ($borr->{'emailaddress'}){$template->param(MAIL =>$borr->{'emailaddress'} ); }
}

#

# get all the search variables
# we assume that C4::Search will validate these values for us
my @fields = ('keyword', 'subject', 'author', 'illustrator', 'itemnumber', 'isbn', 'date-before', 'date-after', 'class', 'dewey', 'branch', 'title', 'abstract', 'publisher','subjectitems', 'virtual', 'shelves'); #Matias: Agrego 'virtual'  

# collect all the fields ...
my $subject;
#my %search;
#my $forminputs;
#my $searchdesc = '';

#Matias: Para permitir buscar desde cualquier lugar importando opac-search.inc, o sea que se esta buscando desde la parte superior de la ventana
my $searchinc=$query->param('searchinc');
if ($searchinc){
	my $field=$query->param('criteria');
   	$search{$field} = $searchinc;
	if ($field eq 'subject') {
				$subject=$searchinc;
    				$template->param(subjectsearch => $subject);
				push @$forminputs, {field => 'subjectitems' , value => $subject};
				}
    	if ($field eq 'shelves'){
         			print $query->redirect("/cgi-bin/koha/opac-shelves.pl?viewShelfItems=$search{$field}&startfrom=0");
    				}
    	if ($field eq 'keyword'){
        			$search{$field} = $query->param('words') unless $search{$field};
    				}	
    	if ($search{$field}) {
        			push @$forminputs, {field => $field, value => $search{$field}};            
				}
	}else{
		#quiere decir que no es searchinc, entonces se esta haciendo una busqueda o simple o avanzada
	(($subject=$query->param('subject'))&&(	$template->param(subjectsearch => $subject)));	
	(($search{'keyword'} = $query->param('keyword'))||($search{'keyword'} =$query->param('words')) );
	foreach my $field (@fields) {
    				$search{$field} = $query->param($field);
    				if ($query->param($field)) {
					push @$forminputs, {field => $field, value => ($query->param($field))};
    							}

				}

	     } #Fin del if que define los parametros de busqueda

#Se crea el searchdesc que es la descripcion de la busqueda, esta mal, deberia estar en el tmpl
if ($search{"keyword"}) {
    $searchdesc.=" T&eacute;rmino de B&uacute;squeda $search{keyword}, ";
}
if ($search{"subject"}){
    $searchdesc.="Materia $subject, ";
}
if ($search{"author"}){
    $searchdesc.="Autor $search{author}, ";
}
if ($search{"title"}){
    $searchdesc.="T&iacute;tulo $search{title}, ";
}

if ($search{"illustrator"}){
    $searchdesc.="Ilustrator $search{illustrator}, ";
}
if ($search{"itemnumber"}){
    $searchdesc.="C&oacute;digo de Barras $search{itemnumber}, ";
}

if ($search{"class"}){
    $searchdesc.="Tipo $search{class}, ";}

#ttype es el metodo de busqueda, si es exacto o no
$search{'ttype'} = $query->param('ttype');
push @$forminputs, {field => 'ttype', value => $search{'ttype'}};

if ($search{'subjectitems'}=$query->param('subjectitems')){
  push @$forminputs, {field => 'subjectitems' , value => $search{'subjectitems'}};
    $searchdesc.="Materia $search{'subjectitems'}"; }

#Matias: Biblioteca Virtual
if ($virtual){
    $search{'virtual'}= $virtual;
    $searchdesc.="Biblioteca Virtual $virtual ";
}
#

#Luciano: Busqueda por diccionario
#if ($dictionary){
#	$search{'dictionary'}= $dictionary;
#	push @$forminputs, {field => 'dictionary' , value => $dictionary};
#	$search{'dicdetail'}= $dicdetail;
#    $searchdesc.="diccionario";
#}
#


@$forminputs=() unless $forminputs;
$template->param(FORMINPUTS => $forminputs);

# do the searchs ....
my $env;
$env->{itemcount}=1;
my $number_of_results;
(($number_of_results = $query->param('cantidad'))||($number_of_results=15));
(($number_of_results gt 300)&&($number_of_results=300));
my @results;
my $count;
my $startfrom = $query->param('startfrom');

#tuto estante virtual
if ($shelves) {
    
    my (%resultsShelf) = &getbookshelfLike($shelves, $number_of_results,$startfrom);
    #$count = $#results+1;
} else {

    ($count, @results) = &catalogsearch($env,'opac',\%search,$number_of_results,$startfrom,$orden);
}


################### AGREGADO POR LUCIANO ##########################
if ($dictionary) {
                                                                                                                             
  $template->param(SEARCH_RESULTS => \@results);
  $template->param(searchdesc => 'diccionario');
  $template->param(numrecords => $count);
                                                                                                                             
} else {
###################################################################

my $num = 1;
=item
La estructura de @results es un array con elementos que tienen la siguiente estructura:
(res->{'counts'})[$id]{'cantXbranch'}      la cantidad de items para ese branch de ese biblio
(res->{'counts'})[$id]{'cantXbranchNotForLoan'} la cantidad de items para ese branch de ese biblio que son para sala 
(res->{'counts'})[$id]{$holdingbranchcode}{'prestados'} la cantidad de items para ese branch de ese biblio que estan prestados/reservados 
(res->{'counts'})[$id]{'nombre'}el nombre de la holding branch
(res->{'total'} el total de items de ese biblio entre todas las branchs
res->{'grupos'}->{$id}{'biblioitemnumbernumber'}=$data->{'biblioitemnumber'}; el biblionumber
res->{'grupos'}->{$id}{'edicion'}=$data->{'number'}; la edicion
res->{'grupos'}->{$id}{'publicationyear'}=$data->{'publicationyear'}; el anio de publicacion
res->{'grupos'}->{$id}{'volume'}=$data->{'volume'}; indica el volumen
res->{'grupos'}->{$id}{'cant'}=$data->{'volume'}; indica la cantidad de items para el grupo
res->{'grupos'}->{'variosVolumenes'} indica si hay mas de un grupo para ese biblio, si hay una sola tenemos 0

=cut
foreach my $res (@results) {
    #my @items = ItemInfo(undef, $res->{'biblionumber'}, "intra");
    #my $norequests = 1;
    #foreach my $itm (@items) {
#	$norequests = 0 unless $itm->{'notforloan'};
#    }
#    $res->{'norequests'} = $norequests;
    # set up the even odd elements....
    ((($num % 2) && ($res->{'clase'} = 'par' ))|| ($res->{'clase'}='impar'));
    #1 if $num % 2 == 0;
    #$res->{'odd'} = 1 if $num % 2 == 1;
    $num++;
}

my $startfrom=$query->param('startfrom');
($startfrom) || ($startfrom=0);

my $resultsarray=\@results;
($resultsarray) || (@$resultsarray=());


# sorting out which results to display.
$template->param(startfrom => $startfrom+1);
($startfrom+$num<=$count) ? ($template->param(endat => $startfrom+$number_of_results)) : ($template->param(endat => $count));
$template->param(numrecords => $count);
my $nextstartfrom=($startfrom+$number_of_results<$count) ? ($startfrom+$number_of_results) : (-1);
my $prevstartfrom=($startfrom-$number_of_results>=0) ? ($startfrom-$number_of_results) : (-1);
$template->param(nextstartfrom => $nextstartfrom);
my $displaynext=($nextstartfrom==-1) ? 0 : 1;
my $displayprev=($prevstartfrom==-1) ? 0 : 1;
$template->param(displaynext => $displaynext);
$template->param(displayprev => $displayprev);
$template->param(prevstartfrom => $prevstartfrom);

$template->param(searchdesc => $searchdesc);
$template->param(SEARCH_RESULTS => $resultsarray);

#Matias: Orden del resultado
$template->param(orden => $orden);
#


$template->param(pagetitle => "Resultados de la b&uacute;squeda");

my $numbers;
@$numbers = ();
if ($count>$number_of_results) {
    for (my $i=0; $i<($count/$number_of_results); $i++) {
	my $highlight=0;
	my $break=0;
	my $themelang = $template->param('themelang');
	($startfrom==($i*$number_of_results)) && ($highlight=1);
	if ((($i+1) % 29) eq 0){$break=1;}
	push @$numbers, { number => $i+1, highlight => $highlight , break => $break, startfrom => (($i)*$number_of_results) };
   }
}

$template->param(numbers => $numbers,
			     LibraryName => C4::Context->preference("LibraryName"),
);

} ############ Del if agragado por Luciano

#Para ver los tiempos
#my ($epoch, $usecs) = gettimeofday;
#my ($second, $minute, $hour) = localtime $epoch;
#printf L "fin %02d:%02d:%02d.%06d\n", $hour, $minute, $second, $usecs;
#close L;

output_html_with_http_headers $query, $cookie, $template->output;
